name: Build and Deploy

on:
  push:
    branches:
      - main
      - hot-fix-env
  workflow_dispatch:
    inputs:
      build:
        required: true
        default: 'false'
        type: boolean
      deploy:
        required: true
        default: 'false'
        type: boolean
   #  - main
   #paths:
   #  - 'frontend/**'
   #  - 'backend/**'

jobs:
  build:
    if: ${{ github.event.inputs.build == 'true' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push frontend
        uses: docker/build-push-action@v6
        with:
          build-args: |
            NEXT_PUBLIC_API_BASE_URL=${{ secrets.NEXT_PUBLIC_API_BASE_URL }}
          context: ./frontend
          push: true
          tags: z1yoon/nus-secondhand-market-frontend:latest

      - name: Build and push backend
        uses: docker/build-push-action@v6
        with:
          context: ./backend
          push: true
          tags: z1yoon/nus-secondhand-market-backend:latest

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: '${{ secrets.AWS_ACCESS_KEY_ID }}'
          aws-secret-access-key: '${{ secrets.AWS_SECRET_ACCESS_KEY }}'
          aws-region: ap-southeast-1
  deploy:
    if: ${{ github.event.inputs.deploy == 'true' }}
    runs-on: ubuntu-latest
   #needs: build
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: SSH into EC2 and deploy
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_PUBLIC_IP }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "docker-compose.yaml, init/*"
          target: "/home/ubuntu"

      - name: SSH into EC2 to run Docker Compose
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > private_key && chmod 600 private_key
          ssh -i private_key -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_PUBLIC_IP }} << 'EOF'
            echo "POSTGRES_USERNAME=${{ secrets.POSTGRES_USERNAME }}" > .env
            echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
            echo "POSTGRES_URL=${{ secrets.POSTGRES_URL }}" >> .env
            echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .env
            echo "API_BASE_URL: ${{ secrets.API_BASE_URL }}" >> .env
            echo "EC2_PUBLIC_IP=${{ secrets.EC2_PUBLIC_IP }} >> .env
            docker compose up -d
          EOF
