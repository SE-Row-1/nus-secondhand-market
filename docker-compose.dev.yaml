name: NSHM

services:
  web:
    build:
      context: services/web
      dockerfile: Dockerfile.dev
    ports:
      - 3000:3000
    env_file:
      - services/web/.env
    volumes:
      - ./services/web:/app
      - /app/node_modules
    networks:
      - bridge
    depends_on:
      - account
      - item
      - wishlist
    restart: always

  account:
    build:
      context: services/account
      dockerfile: Dockerfile
    ports:
      - 8081:8081
    env_file:
      - services/account/.env
    networks:
      - bridge
    depends_on:
      account-postgres:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    restart: always

  account-postgres:
    image: postgres
    ports:
      - 5432:5432
    env_file:
      - envs/account-postgres.env
    volumes:
      - ./services/account/database:/docker-entrypoint-initdb.d
      - account-postgres-data:/var/lib/postgresql/data
    networks:
      - bridge
    restart: always

  item:
    build:
      context: services/item
      dockerfile: Dockerfile.dev
    ports:
      - 8082:8082
    env_file:
      - services/item/.env
    volumes:
      - ./services/item:/app
      - /app/node_modules
    networks:
      - bridge
    depends_on:
      item-mongo:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    restart: always

  item-mongo:
    image: mongo
    ports:
      - 27017:27017
    env_file:
      - envs/item-mongo.env
    volumes:
      - ./services/item/database/development:/docker-entrypoint-initdb.d
      - item-mongo-data:/data/db
    networks:
      - bridge
    restart: always

  wishlist:
    build:
      context: services/wishlist
      dockerfile: Dockerfile
    ports:
      - 8083:8083
    env_file:
      - services/wishlist/.env
    networks:
      - bridge
    depends_on:
      wishlist-mongo:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    restart: always

  wishlist-mongo:
    image: mongo
    ports:
      - 27018:27017
    env_file:
      - envs/wishlist-mongo.env
    volumes:
      - ./services/wishlist/database/dev:/docker-entrypoint-initdb.d
      - wishlist-mongo-data:/data/db
    networks:
      - bridge
    restart: always

  transaction:
    build:
      context: services/transaction
      dockerfile: Dockerfile.dev
    ports:
      - 8084:8084
    env_file:
      - services/transaction/.env
    networks:
      - bridge
    depends_on:
      transaction-postgres:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    restart: always

  transaction-postgres:
    image: postgres
    ports:
      - 5433:5432
    env_file:
      - envs/transaction-postgres.env
    volumes:
      - ./services/transaction/database/development:/docker-entrypoint-initdb.d
      - transaction-postgres-data:/var/lib/postgresql/data
    networks:
      - bridge
    restart: always

  notification:
    build:
      context: services/notification
      dockerfile: Dockerfile
    env_file:
      - services/notification/.env
    networks:
      - bridge
    depends_on:
      - rabbitmq
    restart: always

  rabbitmq:
    build:
      context: services/rabbitmq
      dockerfile: Dockerfile
    ports:
      - 5672:5672
      - 15672:15672
    env_file:
      - services/rabbitmq/.env
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    healthcheck:
      test: [ "CMD-SHELL", "rabbitmqctl status" ]
      interval: 30s
      retries: 5
    networks:
      - bridge
    restart: always

  nginx:
    image: nginx
    ports:
      - 80:80
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - bridge
    depends_on:
      - web
      - account
      - item
      - wishlist
    restart: always

volumes:
  account-postgres-data:
  item-mongo-data:
  wishlist-mongo-data:
  transaction-postgres-data:
  rabbitmq-data:


networks:
  bridge:
